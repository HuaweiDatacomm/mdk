***************
*** 29,34 ****
  import regex
  import six
  from bitarray import bitarray
  
  # Words that could turn up in YANG definition files that are actually
  # reserved names in Python, such as being builtin types. This list is
--- 29,35 ----
  import regex
  import six
  from bitarray import bitarray
+ from lxml.objectify import StringElement
  
  # Words that could turn up in YANG definition files that are actually
  # reserved names in Python, such as being builtin types. This list is
***************
*** 296,308 ****
  
              def match_pattern_check(regexp):
  
-                 def mp_check(value):
                      if not isinstance(value, six.string_types + (six.text_type,)):
                          return False
                      if regex.match(convert_regexp(regexp), value):
                          return True
                      return False
  
                  return mp_check
  
              def in_dictionary_check(dictionary):
--- 297,319 ----
  
              def match_pattern_check(regexp):
  
+                 def mp_check_old(value):
                      if not isinstance(value, six.string_types + (six.text_type,)):
                          return False
                      if regex.match(convert_regexp(regexp), value):
                          return True
                      return False
  
+                 def mp_check(value):
+                     if isinstance(value, six.string_types + (six.text_type,)):
+                         if regex.match(convert_regexp(regexp), value):
+                             return True
+                     elif isinstance(value, StringElement):
+                         if isinstance(value.text, six.string_types + (six.text_type,)):
+                             if regex.match(convert_regexp(regexp), value.text):
+                                 return True
+                     return False
+ 
                  return mp_check
  
              def in_dictionary_check(dictionary):
***************
*** 997,1002 ****
          "_yang_type",
          "_defining_module",
          "_metadata",
          "_is_config",
          "_cpresent",
          "_presence",
--- 1008,1014 ----
          "_yang_type",
          "_defining_module",
          "_metadata",
+         "_metadata_ns",
          "_is_config",
          "_cpresent",
          "_presence",
***************
*** 1055,1060 ****
              self._yang_type = yang_type
              self._defining_module = defining_module
              self._metadata = {}
              self._presence = has_presence
              self._cpresent = False
  
--- 1067,1073 ----
              self._yang_type = yang_type
              self._defining_module = defining_module
              self._metadata = {}
+             self._metadata_ns = {}
              self._presence = has_presence
              self._cpresent = False
  
***************
*** 1143,1148 ****
          def _add_metadata(self, k, v):
              self._metadata[k] = v
  
          def yang_name(self):
              return self._yang_name
  
--- 1156,1167 ----
          def _add_metadata(self, k, v):
              self._metadata[k] = v
  
+         def _add_metadata_ns(self, k, k_ns, v):
+             self._metadata_ns[(k, k_ns)] = v
+ 
+         def get_metadata_ns(self):
+             return self._metadata_ns
+ 
          def yang_name(self):
              return self._yang_name
  
